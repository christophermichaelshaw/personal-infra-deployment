name: Validate Kustomize and SOPS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  validate:
    name: Validate Manifests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Install latest sops
        run: |
          SOPS_LATEST=$(curl -s https://api.github.com/repos/getsops/sops/releases/latest | jq -r .tag_name)
          SOPS_URL="https://github.com/getsops/sops/releases/download/${SOPS_LATEST}/sops-${SOPS_LATEST}.linux.amd64"
          echo "Downloading SOPS from $SOPS_URL"
          curl -sSfL "$SOPS_URL" -o sops || { echo "❌ Failed to download SOPS"; exit 1; }
          file sops
          chmod +x sops
          sudo mv sops /usr/local/bin/sops

      - name: Install latest kustomize
        run: |
          KUSTOMIZE_LATEST=$(curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest | jq -r .tag_name)
          KUSTOMIZE_URL="https://github.com/kubernetes-sigs/kustomize/releases/download/${KUSTOMIZE_LATEST}/kustomize_${KUSTOMIZE_LATEST#*/}_linux_amd64.tar.gz"
          curl -sSL -o kustomize.tar.gz "$KUSTOMIZE_URL"
          tar -xzf kustomize.tar.gz
          chmod +x kustomize
          sudo mv kustomize /usr/local/bin/kustomize

      - name: Install latest yq
        run: |
          YQ_LATEST=$(curl -s https://api.github.com/repos/mikefarah/yq/releases/latest | jq -r .tag_name)
          curl -sSL -o yq "https://github.com/mikefarah/yq/releases/download/${YQ_LATEST}/yq_linux_amd64"
          chmod +x yq
          sudo mv yq /usr/local/bin/yq

      - name: Validate Kustomize manifests
        run: |
          find clusters -name kustomization.yaml -exec dirname {} \; | while read dir; do
            echo "Validating $dir"
            kustomize build "$dir" > /dev/null
          done

      - name: Validate SOPS decryption
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        run: |
          echo "$SOPS_AGE_KEY" > age-key.txt
          export SOPS_AGE_KEY_FILE=age-key.txt
          find clusters -type f -name '*.yaml' -path '*/secrets/*' | while read secret; do
            echo "Decrypting $secret"
            sops -d "$secret" > /dev/null
          done

